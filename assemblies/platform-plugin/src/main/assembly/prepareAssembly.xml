<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
  <id>prepare-assembly</id>
  <formats>
    <format>dir</format>
  </formats>
  <includeBaseDirectory>false</includeBaseDirectory>

  <moduleSets>
    <moduleSet>

      <!-- Enable access to all projects in the current multi-module build! -->
      <useAllReactorProjects>true</useAllReactorProjects>

      <!-- Now, select which projects to include in this module-set. -->
      <includes>
        <include>pentaho:common-ui-impl-client</include>
      </includes>
      <!--<binaries>-->
        <!--<outputDirectory>modules/maven-assembly-plugin</outputDirectory>-->
        <!--<unpack>false</unpack>-->
      <!--</binaries>-->
      <sources>
        <includeModuleDirectory>false</includeModuleDirectory>
        <fileSets>
          <fileSet>
            <directory>${project.build.directory}</directory>
            <outputDirectory>common-ui-impl-client/web</outputDirectory>
            <includes>
              <include>common-ui-impl-client*</include>
            </includes>
          </fileSet>
        </fileSets>
      </sources>
    </moduleSet>
  </moduleSets>



  <dependencySets>

    <!-- Common-ui needs to overwrites some files. Because of maven assembly limitations in overriding files between
    type of sets in an assembly descriptor we are unpacking those files into a temporary folder to later be used in the
     main assembly descriptor as a file set-->
    <!--<dependencySet>-->
      <!--<includes>-->
        <!--<include>org.pentaho:common-ui-impl-client</include>-->
      <!--</includes>-->
      <!--<useTransitiveDependencies>false</useTransitiveDependencies>-->
      <!--<unpack>true</unpack>-->
      <!--<outputDirectory>common-ui-impl-client</outputDirectory>-->
      <!--<useProjectArtifact>false</useProjectArtifact>-->
    <!--</dependencySet>-->

    <dependencySet>
      <outputDirectory>common-ui-impl-client/web</outputDirectory>
      <scope>runtime</scope>
      <useTransitiveDependencies>false</useTransitiveDependencies>
      <includes>
        <include>*:jar:*</include>
      </includes>
      <excludes>
        <exclude>*:sources</exclude>
      </excludes>
    </dependencySet>

    <!-- GWT -->
    <dependencySet>
      <includes>
        <include>org.pentaho:commons-gwt-widgets</include>
      </includes>
      <useTransitiveDependencies>false</useTransitiveDependencies>
      <unpack>true</unpack>
      <unpackOptions>
        <includes>
          <include>org/pentaho/gwt/widgets/themes/public/themes/**</include>
        </includes>
      </unpackOptions>
      <outputDirectory>gwt-widgets</outputDirectory>
      <useProjectArtifact>false</useProjectArtifact>
    </dependencySet>
    <dependencySet>
      <includes>
        <include>org.pentaho:commons-gwt-widgets-package:war</include>
      </includes>
      <useTransitiveDependencies>false</useTransitiveDependencies>
      <unpack>true</unpack>
      <unpackOptions>
        <includes>
          <include>formatter/**</include>
        </includes>
      </unpackOptions>
      <outputDirectory>gwt-widgets</outputDirectory>
      <useProjectArtifact>false</useProjectArtifact>
    </dependencySet>

    <dependencySet>
      <includes>
        <include>org.dojotoolkit.dojo:dojo-release:zip</include>
      </includes>
      <useTransitiveDependencies>false</useTransitiveDependencies>
      <unpack>true</unpack>
      <outputDirectory>dojox</outputDirectory>
      <useProjectArtifact>false</useProjectArtifact>
    </dependencySet>

    <dependencySet>
      <includes>
        <include>
          org.webjars.*
        </include>
      </includes>
      <useTransitiveDependencies>false</useTransitiveDependencies>
      <unpack>true</unpack>
      <outputDirectory>webjars</outputDirectory>
      <useProjectArtifact>false</useProjectArtifact>
    </dependencySet>

  </dependencySets>

</assembly>
