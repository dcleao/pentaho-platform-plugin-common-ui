/*!
 * Copyright 2010 - 2015 Pentaho Corporation.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The `ITypeConfiguration` interface represents a sequence of component type
 * configuration rules.
 *
 * When more than one configuration rule applies to a visual type,
 * the rules are applied in reverse order (last rule wins) of the following precedence rules:
 *
 * 1. {@link pentaho.component.ITypeConfigurationRule#priority} property, from greater to lower values.
 * 2. First _Individual_ then _Group_ rules — see {@link pentaho.component.ITypeConfigurationRule#id}.
 * 3. Rules of a component type definition class hierarchy, from more specialized to more abstract.
 * 4. Inverse document order — last in document order has higher precedence.
 *
 * These apply also between configuration rules of different {@link pentaho.component.ITypeConfiguration} objects,
 * in which case the order by which these are registered in
 * the {@link pentaho.component.TypeRegistry} impacts their _document order_.
 * However, note that for the configurations that are automatically loaded by the {@link pentaho.component.registry},
 * by using the {@link pentaho.service} AMD plugin, their relative order is actually undefined.
 *
 * @name pentaho.component.ITypeConfiguration
 * @interface
 * @see pentaho.component.ITypeDefinition
 *
 * @property {pentaho.component.ITypeConfiguration[]} types An array of configuration rules.
 */