/*!
 * Copyright 2010 - 2015 Pentaho Corporation.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The `spec.ISimple` interface describes a simple value in _object_ form.
 *
 * @example
 * <caption>
 *   A simple value description using the shorthand alias properties
 * </caption>
 *
 * {v: 1, f: "1.0"}
 *
 * @name pentaho.type.spec.ISimple
 *
 * @interface
 * @extends pentaho.type.spec.IValue
 *
 * @see pentaho.type.spec.USimple
 *
 * @property {!any} [value] The underlying JavaScript value.
 *
 * Property [v]{@link pentaho.type.spec.ISimple#v} is an alias for this one.
 *
 * Cannot be {@link Nully}. Either `v` or `value` must be specified.
 *
 * Check the specification documentation of subtypes of this one,
 * for information about supported, specialized value formats.
 *
 * @property {?string} [formatted] The formatted value.
 * When unspecified, or specified as a {@link Nully} or empty value, it is taken to be `null`.
 *
 * Property [f]{@link pentaho.type.spec.ISimple#f} is an alias for this one.
 *
 * Only one of `f` or `formatted` can be specified.
 *
 * @property {!any} [v] An alias for [value]{@link pentaho.type.spec.ISimple#value}.

 * @property {?string} [f] An alias for [formatted]{@link pentaho.type.spec.ISimple#formatted}.
 */
